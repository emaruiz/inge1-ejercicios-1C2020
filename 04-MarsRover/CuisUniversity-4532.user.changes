

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (14 May 2021 19:40:31) as /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!


----End fileIn of /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/Mars-Rover.st----!

!classDefinition: #MarsRoverTest category: 'Mars-Rover' stamp: 'bi 5/14/2021 19:45:17'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRover category: 'Mars-Rover' stamp: 'bi 5/14/2021 19:45:39'!
Object subclass: #MarsRover
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:45:13' prior: 50859348!
test01
	
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@0 heding: #North
	)! !

TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverTest category: 'Mars-Rover' stamp: 'bi 5/14/2021 19:46:15'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:46:33' prior: 50859372!
test01
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@0 heding: #North
	)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:46:37' prior: 50859391!
test01
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@0 heding: #North	)! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:46:42'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:46:42'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:48:08'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:48:29'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:48:29'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:48:35'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:48:35'!
ERROR!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:49:22'!
at: aPoint heading: aSymbol 
	self shouldBeImplemented.! !

!classDefinition: 'MarsRover class' category: 'Mars-Rover' stamp: 'bi 5/14/2021 19:52:02'!
MarsRover class
	instanceVariableNames: 'position'!

!classDefinition: 'MarsRover class' category: 'Mars-Rover' stamp: 'bi 5/14/2021 19:52:04'!
MarsRover class
	instanceVariableNames: 'position cardinalPoint'!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:51:35' prior: 50859423!
at: aPosition heading: aCardinalPoint 
	
	position := aPosition .
	cardinalPoint := aCardinalPoint .! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:52:09'!
ERROR!
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:52:37'!
process: aString 
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:52:55' prior: 50859447!
process: aProcess
! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:52:58'!
ERROR!
!MarsRover class methodsFor: 'inquiries' stamp: 'bi 5/14/2021 19:55:07'!
isAt: aPoint heding: aSymbol 
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'inquiries' stamp: 'bi 5/14/2021 19:55:46' prior: 50859458!
isAt: aPosition heding: aCardinalPoint 
	
	^true.! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:55:49'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 19:55:53'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:58:55'!
test02
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: #North.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@0 heding: #North	)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 19:59:50' prior: 50859472!
test02
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: #North.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@0 heding: #North	)! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:00:12'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:00:13'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:00:13'!
FAILURE!
!MarsRover class methodsFor: 'inquiries' stamp: 'bi 5/14/2021 20:02:06' prior: 50859463!
isAt: aPosition heding: aCardinalPoint 
	
	^(position = aPosition)! !

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:02:10'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:02:13'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:02:13'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 20:03:18'!
test03
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: #South.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@1 heding: #South	)! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:03:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:03:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:03:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 20:04:20' prior: 50859507!
test03
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: #South.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@1 heding: #North	)! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:04:23'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:04:23'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:04:23'!
FAILURE!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:04:24'!
FAILURE!
!MarsRover class methodsFor: 'inquiries' stamp: 'bi 5/14/2021 20:05:32' prior: 50859495!
isAt: aPosition heding: aCardinalPoint 
	
	^(position = aPosition and: cardinalPoint = aCardinalPoint )! !

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:05:35'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:05:38'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:05:38'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:05:38'!
PASSED!

!classDefinition: #MarsRover category: 'Mars-Rover' stamp: 'bi 5/14/2021 20:08:52'!
Object subclass: #MarsRover
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRover category: 'Mars-Rover' stamp: 'bi 5/14/2021 20:08:54'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRover methodsFor: 'nil' stamp: 'bi 5/14/2021 20:08:47'!
at: aPosition heading: aCardinalPoint 
	
	position := aPosition .
	cardinalPoint := aCardinalPoint .! !

MarsRover class
	instanceVariableNames: ''!

!classDefinition: 'MarsRover class' category: 'Mars-Rover' stamp: 'bi 5/14/2021 20:09:08'!
MarsRover class
	instanceVariableNames: ''!
!MarsRover methodsFor: 'nil' stamp: 'bi 5/14/2021 20:09:27'!
isAt: aPosition heding: aCardinalPoint 
	
	^(position = aPosition and: cardinalPoint = aCardinalPoint )! !
!MarsRover methodsFor: 'nil' stamp: 'bi 5/14/2021 20:09:39'!
process: aProcess
! !

!methodRemoval: MarsRover class #at:heading: stamp: 'bi 5/14/2021 20:09:56'!
at: aPosition heading: aCardinalPoint 
	
	position := aPosition .
	cardinalPoint := aCardinalPoint .!

!methodRemoval: MarsRover class #isAt:heding: stamp: 'bi 5/14/2021 20:09:58'!
isAt: aPosition heding: aCardinalPoint 
	
	^(position = aPosition and: cardinalPoint = aCardinalPoint )!

!methodRemoval: MarsRover class #process: stamp: 'bi 5/14/2021 20:10:00'!
process: aProcess
!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:10:13'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:10:13'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:10:13'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:11:41'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:12:11'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:12:21'!
ERROR!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/14/2021 20:14:35'!
at: aPoint heading: aSymbol 
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/14/2021 20:17:11' prior: 50859617!
at: aPosition heading: aCardinalPoint 
	
	^MarsRover new initializeAt: aPosition heading: aCardinalPoint .! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:17:20'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'bi 5/14/2021 20:17:40'!
initializeAt: aPosition heading: aCardinalPoint 
	self shouldBeImplemented.
	position := aPosition.
	cardinalPoint := aCardinalPoint.! !
!MarsRover methodsFor: 'initialization' stamp: 'bi 5/14/2021 20:18:00' prior: 50859630!
initializeAt: aPosition heading: aCardinalPoint 

	position := aPosition.
	cardinalPoint := aCardinalPoint.! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:18:04'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:18:10'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:18:10'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:18:10'!
PASSED!

!methodRemoval: MarsRover #at:heading: stamp: 'bi 5/14/2021 20:18:57'!
at: aPosition heading: aCardinalPoint 
	
	position := aPosition .
	cardinalPoint := aCardinalPoint .!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 20:19:18' prior: 50859579!
isAt: aPosition heding: aCardinalPoint 
	
	^position = aPosition and: [cardinalPoint = aCardinalPoint ].! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:19:35'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:19:35'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:19:35'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 20:28:44'!
test04
	
	
	self 
		should: [MarsRover at: 0@0 heading: #Fruit]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ].! !

!testRun: #MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:38:33'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 20:38:33'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 20:38:33'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'bi 5/14/2021 20:38:33'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'bi 5/14/2021 20:38:33'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'bi 5/14/2021 20:38:51'!
FAILURE!

!testRun: #MarsRoverTest #test04 stamp: 'bi 5/14/2021 20:39:02'!
FAILURE!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 20:46:23' prior: 50859673!
test04
	
	
	"self 
		should: [MarsRover at: 0@0 heading: #Fruit]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ]."! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 20:54:52'!
test01CreationCorrectlyPositionAndCardinalPoint
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@0 heding: #North	)! !

!methodRemoval: MarsRoverTest #test01 stamp: 'bi 5/14/2021 20:54:56'!
test01
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: #North.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@0 heding: #North	)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:08:36' prior: 50859480!
test02
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: $N.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@0 heding: $N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:09:01' prior: 50859708!
test01CreationCorrectlyPositionAndCardinalPoint
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: ''.
	
	self assert: (marsRover isAt: 0@0 heding: $N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:09:14' prior: 50859522!
test03
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: $S.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@1 heding: $N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:09:28' prior: 50859699!
test04
	
	
	"self 
		should: [MarsRover at: 0@0 heading: $F]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ]."! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/14/2021 21:09:30'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'bi 5/14/2021 21:09:30'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'bi 5/14/2021 21:09:30'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'bi 5/14/2021 21:09:30'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:11:02'!
test04CannotCreateMarsRoverWithWrongOrientation
	
	
	"self 
		should: [MarsRover at: 0@0 heading: $F]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ]."! !

!methodRemoval: MarsRoverTest #test04 stamp: 'bi 5/14/2021 21:11:07'!
test04
	
	
	"self 
		should: [MarsRover at: 0@0 heading: $F]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ]."!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:11:51'!
test04CannotCreateMarsRoverWithWrongCardinalPoint
	
	
	"self 
		should: [MarsRover at: 0@0 heading: $F]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ]."! !

!methodRemoval: MarsRoverTest #test04CannotCreateMarsRoverWithWrongOrientation stamp: 'bi 5/14/2021 21:11:51'!
test04CannotCreateMarsRoverWithWrongOrientation
	
	
	"self 
		should: [MarsRover at: 0@0 heading: $F]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ]."!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:19:25'!
test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: $N.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@0 heding: $N)! !

!methodRemoval: MarsRoverTest #test02 stamp: 'bi 5/14/2021 21:19:32'!
test02
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: $N.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@0 heding: $N)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:20:59'!
test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: $S.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@1 heding: $N)! !

!methodRemoval: MarsRoverTest #test03 stamp: 'bi 5/14/2021 21:21:09'!
test03
	
	| marsRover |
	
	marsRover := MarsRover at: 0@1 heading: $S.
	
	marsRover process: ''.
	
	self deny: (marsRover isAt: 0@1 heding: $N)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:21:39' prior: 50859789!
test04CannotCreateMarsRoverWithWrongCardinalPoint
	
	
	self 
		should: [MarsRover at: 0@0 heading: $F]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidCardinalPointErrorDescription ].! !

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/14/2021 21:21:51'!
FAILURE!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/14/2021 21:31:01' prior: 50859622!
at: aPosition heading: aCardinalPoint 
	
	(#($N $S $E $O) includes: aCardinalPoint) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: ''
		].! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/14/2021 21:31:58' prior: 50859859!
at: aPosition heading: aCardinalPoint 
	
	(#($N $S $E $O) includes: aCardinalPoint) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: 'aCardinalPoint not valid'
		].! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/14/2021 21:32:07' prior: 50859869!
at: aPosition heading: aCardinalPoint 
	
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: 'aCardinalPoint not valid'
		].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/14/2021 21:32:17'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/14/2021 21:32:17'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/14/2021 21:32:17'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/14/2021 21:32:17'!
ERROR!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/14/2021 21:32:17'!
ERROR!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/14/2021 21:32:37'!
ERROR!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/14/2021 21:33:50'!
invalidCardinalPointErrorDescription
	
	^'aCardinalPoint not valid'! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/14/2021 21:34:25' prior: 50859880!
at: aPosition heading: aCardinalPoint 
	
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/14/2021 21:35:01'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/14/2021 21:35:01'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/14/2021 21:35:01'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/14/2021 21:35:01'!
PASSED!

0@0!

(0@0) x!

(0@0) y!

(0@1) x!

(0@1) y!

0@0 !

(0@1) x!

(0@1) y !

(0@1) y typeOfClass !

((0@1) y) typeOfClass !

((0@1) y) value !

(0@1) y asInteger !

(0@1) y isInteger!

(0@$N) y isInteger!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/14/2021 21:49:41'!
test05
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"! !

----QUIT----(14 May 2021 21:52:40) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (15 May 2021 16:53:45) as /home/manuel/Facultad/Ingeniería1/Ejercicios/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!

!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 16:56:15' prior: 50859952!
test05
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 0@'1' heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 16:56:38'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 16:56:38'!
FAILURE!

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 16:56:42'!
FAILURE!
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 16:59:54' prior: 50859919!
at: aPosition heading: aCardinalPoint 
	
	aPosition  y isInteger  ifFalse:[self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 17:00:17' prior: 50859987!
at: aPosition heading: aCardinalPoint 
	
	aPosition y isInteger ifFalse:[self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:00:24'!
ERROR!

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:00:24'!
ERROR!
!MarsRover class methodsFor: 'assertions' stamp: 'e d r r 5/15/2021 17:00:44'!
invalidPositionErrorDescription
	self shouldBeImplemented.! !
!MarsRover class methodsFor: 'assertions' stamp: 'e d r r 5/15/2021 17:00:57' prior: 50860019!
invalidPositionErrorDescription
	
	^'aPosition not valid'! !

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:01:08'!
FAILURE!

MarsRover invalidPositionErrorDescription!

anError messageText!

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:03:07'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:03:13'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 17:03:28'!
test06
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 0@'1' heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 17:03:44' prior: 50860039!
test06
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 0@'1' heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 17:04:11' prior: 50860052!
test06
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: '0'@1 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:04:19'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:04:19'!
FAILURE!

actual!

expected!

MarsRover!
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 17:11:06' prior: 50860001!
at: aPosition heading: aCardinalPoint 
	
	(aPosition x isInteger and: aPosition y isInteger) ifFalse:[self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:11:24'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:11:24'!
FAILURE!
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 17:11:43' prior: 50860084!
at: aPosition heading: aCardinalPoint 
	
	(aPosition x isInteger and: aPosition y isInteger) ifFalse: [self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:11:57'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:11:57'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:28:38'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:28:38'!
FAILURE!

aBoolean!

aStringOrBlock!
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 16:59:54' prior: 50860104!
at: aPosition heading: aCardinalPoint 
	
	aPosition  y isInteger  ifFalse:[self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:33:47'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 17:40:32' prior: 50860065!
test06
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	|invalidPosition|
	invalidPosition := Point x:'0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 17:40:54' prior: 50860147!
test06
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	| invalidPosition |
	invalidPosition := Point x:'0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:40:59'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:40:59'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:43:04'!
FAILURE!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:43:04'!
FAILURE!
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 17:43:47' prior: 50860130!
at: aPosition heading: aCardinalPoint 
	
	(aPosition x isInteger and: aPosition y isInteger) ifFalse:[self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:44:21'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/15/2021 17:44:39'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/15/2021 17:44:39'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/15/2021 17:44:39'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/15/2021 17:44:39'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:44:39'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:44:39'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 17:51:41'!
test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 0@'1' heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!methodRemoval: MarsRoverTest #test05 stamp: 'e d r r 5/15/2021 17:51:41'!
test05
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 0@'1' heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 17:52:14'!
test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	| invalidPosition |
	invalidPosition := Point x:'0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!methodRemoval: MarsRoverTest #test06 stamp: 'e d r r 5/15/2021 17:52:14'!
test06
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	| invalidPosition |
	invalidPosition := Point x:'0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:02:34' prior: 50860251!
test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	| invalidPosition |
	invalidPosition := Point x: '0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/15/2021 18:02:37'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/15/2021 18:02:37'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/15/2021 18:02:37'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/15/2021 18:02:37'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:02:37'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:02:37'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:02:46'!
test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	| invalidPosition |
	invalidPosition := Point x: '0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:03:25' prior: 50860282!
test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	| invalidPosition |
	invalidPosition := Point x: '0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:03:52' prior: 50860323!
test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 01 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:04:36'!
FAILURE!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:04:36'!
FAILURE!

actual!

expected!
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 18:05:57' prior: 50860187!
at: aPosition heading: aCardinalPoint 
	
	(aPosition isPoint and: aPosition x isInteger and: aPosition y isInteger) ifFalse:[self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 18:06:14' prior: 50860380!
at: aPosition heading: aCardinalPoint 
	
	(aPosition isPoint and: aPosition x isInteger and: aPosition y isInteger) ifFalse: [self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:06:33'!
FAILURE!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:06:33'!
FAILURE!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:08:02'!
FAILURE!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:08:02'!
FAILURE!

actual!

expected!
!MarsRover class methodsFor: 'initialize' stamp: 'e d r r 5/15/2021 18:09:07' prior: 50860395!
at: aPosition heading: aCardinalPoint 
	
	aPosition isPoint ifFalse: [self error: self invalidPositionErrorDescription].
	(aPosition x isInteger and: aPosition y isInteger) ifFalse: [self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:09:28'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/15/2021 18:09:32'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/15/2021 18:09:32'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/15/2021 18:09:32'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/15/2021 18:09:32'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:09:32'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:09:32'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:09:32'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:10:20' prior: 50860357!
test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 01 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:11:14' prior: 50860477!
test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 01 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:14:49' prior: 50860492!
test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 01 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:15:13'!
test07CannotCreateMarsRoverWithWrongPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 01 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!methodRemoval: MarsRoverTest #test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:15:13'!
test07CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	"chequear que position sea de tipo Point y que sus coordenadas sean de tipo Integer
	(0@1) y isInteger
	"
	self 
		should: [MarsRover at: 01 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/15/2021 18:15:18'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/15/2021 18:15:18'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/15/2021 18:15:18'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/15/2021 18:15:18'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:15:18'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:15:18'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/15/2021 18:15:18'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:18:18' prior: 50860225!
test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition
	
	
	self 
		should: [MarsRover at: 0@'1' heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:18:25' prior: 50860340!
test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition
	
	
	| invalidPosition |
	invalidPosition := Point x: '0' y: 1.
	self 
		should: [MarsRover at: invalidPosition heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 18:18:39' prior: 50860521!
test07CannotCreateMarsRoverWithWrongPosition
	
	
	self 
		should: [MarsRover at: 01 heading: $N]
		raise: Error
		withExceptionDo: [ :anError | self assert: anError messageText equals: MarsRover invalidPositionErrorDescription ].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/15/2021 18:18:56'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/15/2021 18:18:56'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/15/2021 18:18:56'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/15/2021 18:18:56'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:18:56'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:18:56'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/15/2021 18:18:56'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/15/2021 18:23:23'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/15/2021 18:23:23'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/15/2021 18:23:23'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/15/2021 18:23:23'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:23:23'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 18:23:23'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/15/2021 18:23:23'!
PASSED!

!classRemoval: #MarsRover stamp: 'e d r r 5/15/2021 18:23:46'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #MarsRoverTest stamp: 'e d r r 5/15/2021 18:23:47'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

----End fileIn of /home/manuel/Facultad/Ingeniería1/Ejercicios/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/Mars-Rover.st----!

----STARTUP---- (15 May 2021 18:25:33) as /home/manuel/Facultad/Ingeniería1/Ejercicios/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!


!classRemoval: #MarsRover stamp: 'e d r r 5/15/2021 18:25:58'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #MarsRoverTest stamp: 'e d r r 5/15/2021 18:25:58'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

----End fileIn of /home/manuel/Facultad/Ingeniería1/Ejercicios/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/Mars-Rover.st----!

----QUIT----(15 May 2021 18:26:17) CuisUniversity-4532.image priorSource: 16905848!

----STARTUP---- (15 May 2021 18:41:43) as /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!


!classRemoval: #MarsRover stamp: 'bi 5/15/2021 18:42:16'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #MarsRoverTest stamp: 'bi 5/15/2021 18:42:16'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

----End fileIn of /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/Mars-Rover.st----!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 18:46:14'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 18:46:16'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 18:46:18'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 18:46:20'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 18:46:22'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 18:46:23'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 18:46:25'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 18:46:30'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 18:46:30'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 18:46:30'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 18:46:30'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 18:46:30'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 18:46:30'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 18:46:30'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 18:46:37'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 18:46:37'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 18:46:37'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 18:46:37'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 18:46:37'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 18:46:37'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 18:46:37'!
PASSED!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/15/2021 18:49:33'!
assertPositionIsPoint: aPosition
	
	aPosition isPoint ifFalse: [self error: self invalidPositionErrorDescription].! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/15/2021 18:50:58' prior: 50860281!
at: aPosition heading: aCardinalPoint 
	
	self assertPositionIsPoint: aPosition .
	(aPosition x isInteger and: aPosition y isInteger) ifFalse: [self error: self invalidPositionErrorDescription].
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 18:51:10'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 18:51:10'!
PASSED!
!MarsRover class methodsFor: 'assertions' stamp: 'bi 5/15/2021 18:53:08'!
assertPositionIsAPoint: aPosition
	
	aPosition isPoint ifFalse: [self error: self invalidPositionErrorDescription].! !

!methodRemoval: MarsRover class #assertPositionIsPoint: stamp: 'bi 5/15/2021 18:53:11'!
assertPositionIsPoint: aPosition
	
	aPosition isPoint ifFalse: [self error: self invalidPositionErrorDescription].!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/15/2021 18:55:28'!
assertPosition: aPosition
	
	(aPosition x isInteger and: aPosition y isInteger) ifFalse: [self error: self invalidPositionErrorDescription].! !
!MarsRover class methodsFor: 'assertions' stamp: 'bi 5/15/2021 19:01:53'!
assertPositionCoordinatesIsIntenger: aPosition
	
	(aPosition x isInteger and: aPosition y isInteger) ifFalse: [self error: self invalidPositionErrorDescription].! !

!methodRemoval: MarsRover class #assertPosition: stamp: 'bi 5/15/2021 19:01:55'!
assertPosition: aPosition
	
	(aPosition x isInteger and: aPosition y isInteger) ifFalse: [self error: self invalidPositionErrorDescription].!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/15/2021 19:02:26' prior: 50860391!
at: aPosition heading: aCardinalPoint 
	
	self assertPositionIsAPoint: aPosition .
	self assertPositionCoordinatesIsIntenger: aPosition .
	( #($N $S $E $O) includes: aCardinalPoint ) 
	ifTrue: [
		^MarsRover new initializeAt: aPosition heading: aCardinalPoint
		] 
	ifFalse: 
		[
			self error: self invalidCardinalPointErrorDescription 
		].! !
!MarsRover class methodsFor: 'assertions' stamp: 'bi 5/15/2021 19:05:04'!
assertCardinalPointValid: aCardinalPoint
	
	^ #($N $S $E $O) includes: aCardinalPoint .! !
!MarsRover class methodsFor: 'assertions' stamp: 'bi 5/15/2021 19:06:28' prior: 50860483!
assertCardinalPointValid: aCardinalPoint
	
	(#($N $S $E $O) includes: aCardinalPoint) ifFalse: [self error: self invalidCardinalPointErrorDescription ].! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/15/2021 19:11:12' prior: 50860469!
at: aPosition heading: aCardinalPoint 
	
	self assertPositionIsAPoint: aPosition .
	self assertPositionCoordinatesIsIntenger: aPosition .
	self assertCardinalPointValid: aCardinalPoint .

	^MarsRover new initializeAt: aPosition heading: aCardinalPoint
! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 19:12:20'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 19:12:20'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 19:12:20'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 19:12:20'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 19:12:20'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 19:12:20'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 19:12:20'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 19:51:24'!
test08
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 19:51:27'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 19:51:27'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 19:51:27'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 19:51:27'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 19:51:27'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 19:51:27'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 19:51:27'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 19:51:27'!
FAILURE!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 19:51:27'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 19:53:47' prior: 50860254!
process: aProcess

	position := 0@1 .! !

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 19:53:52'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 19:53:54'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 19:53:54'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 19:53:54'!
FAILURE!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 19:54:08'!
FAILURE!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 19:54:08'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 19:54:08'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 19:54:08'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 19:54:08'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 19:54:08'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 19:54:08'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 19:54:08'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 19:54:08'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 19:56:21' prior: 50860575!
process: aProcess

	($f = aProcess) isTrue: [
		position :=  0@1 
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 19:56:32'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 19:56:32'!
ERROR!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 19:56:32'!
ERROR!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 19:56:32'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 19:56:32'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 19:56:32'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 19:56:32'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 19:56:32'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:01:29' prior: 50860648!
process: aProcess

	aProcess do: [:s | 
		($f = s) isTrue: [
			position :=  (position x) @ (position y + 1)
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:01:48'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:01:48'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:01:48'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:01:48'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:01:48'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:01:48'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:01:48'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:01:48'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:01:48'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:02:06'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:02:35'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:02:35'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:02:51'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:08:08'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:08:08'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:08:48'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:10:35'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:12:20' prior: 50860683!
process: aProcess

	aProcess do: [:s | 
		($f = s) isTrue: [
			position :=  (position x) @ (position y + 1)
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:12:26'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:12:26'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:12:26'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:12:26'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:12:26'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:12:26'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:12:26'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:12:26'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:12:26'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:13:40' prior: 50860740!
process: aProcess

	aProcess do: [:s | 
		($f literalEqual: s) isTrue: [
			position :=  (position x) @ (position y + 1)
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:13:44'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:13:44'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:13:44'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:13:44'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:13:44'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:13:44'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:13:44'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:13:44'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:13:44'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:15:37' prior: 50860779!
process: aProcess

	|valor|

	aProcess do: [:s | 
		valor := ($f literalEqual: s).
		valor isTrue: [
			position :=  (position x) @ (position y + 1)
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:15:42'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:15:42'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:15:42'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:15:42'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:15:42'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:15:42'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:15:42'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:15:42'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:15:42'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:16:25'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:16:52' prior: 50860818!
process: aProcess

	|valor|

	aProcess do: [:s | 
		valor := ($f literalEqual: s).
		valor isTrue: (
			position :=  (position x) @ (position y + 1)
		).
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:16:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:16:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:16:58'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:16:58'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:16:58'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:16:58'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:16:58'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:16:58'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:16:58'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:18:18' prior: 50860861!
process: aProcess

	aProcess do: [:s | 
		($f literalEqual: s) isTrue: (
			position :=  (position x) @ (position y + 1)
		).
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:18:23'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:18:23'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:18:23'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:18:23'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:18:23'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:18:23'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:18:23'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:18:23'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:18:23'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:18:35' prior: 50860901!
process: aProcess

	aProcess do: [:s | 
		($f literalEqual: s) ifTrue: (
			position :=  (position x) @ (position y + 1)
		).
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:18:39'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:18:39'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:18:39'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:18:39'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:18:39'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:18:39'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:18:39'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:18:39'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:19:05' prior: 50860940!
process: aProcess

	aProcess do: [:s | 
		($f literalEqual: s) ifTrue: [
			position :=  (position x) @ (position y + 1)
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:19:12'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:19:12'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:19:12'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:19:12'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:19:12'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:19:12'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:19:12'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:19:12'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:26:18'!
test09
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:27:18' prior: 50861014!
test09
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:27:23' prior: 50861022!
test09
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $S)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:28:51'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:28:51'!
FAILURE!

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:28:51'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:33:51' prior: 50860977!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			]
		].
	].! !

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:33:54'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:33:57'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:33:57'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:39:01' prior: 50861030!
test09
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: -1@0 heding: $O)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:39:13'!
test10
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: -1@0 heding: $O)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:39:29' prior: 50861118!
test09
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $S)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:39:31'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'bi 5/15/2021 20:39:31'!
FAILURE!

!testRun: #MarsRoverTest #test10 stamp: 'bi 5/15/2021 20:39:31'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:40:54' prior: 50861072!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		].
	].! !

!testRun: #MarsRoverTest #test10 stamp: 'bi 5/15/2021 20:40:57'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:41:00'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'bi 5/15/2021 20:41:00'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:41:22'!
test11
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@0 heding: $E)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'bi 5/15/2021 20:41:24'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'bi 5/15/2021 20:41:24'!
FAILURE!

!testRun: #MarsRoverTest #test11 stamp: 'bi 5/15/2021 20:41:24'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/15/2021 20:41:59' prior: 50861179!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
	].! !

!testRun: #MarsRoverTest #test11 stamp: 'bi 5/15/2021 20:42:08'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'bi 5/15/2021 20:42:11'!
PASSED!

----QUIT----(15 May 2021 20:42:49) CuisUniversity-4532.image priorSource: 16911361!

----STARTUP---- (15 May 2021 22:40:15) as /home/manuel/Facultad/Ingeniería1/Ejercicios/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!

!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:11:56'!
test12
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:14:10' prior: 50861339!
test12
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 0@-1 heding: $N)! !

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/15/2021 23:14:13'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/15/2021 23:14:13'!
FAILURE!

aBooleanOrBlock value!

aBooleanOrBlock!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/15/2021 23:25:23'!
FAILURE!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/15/2021 23:25:23'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:31:07' prior: 50861276!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
		]
	].! !

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/15/2021 23:31:32'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/15/2021 23:31:39'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:35:22'!
test13
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $S)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:36:06' prior: 50861392!
test13
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 0@1 heding: $S)! !

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/15/2021 23:36:10'!
FAILURE!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/15/2021 23:36:10'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:38:31' prior: 50861367!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
		]
	].! !

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/15/2021 23:38:36'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/15/2021 23:38:39'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:42:22'!
test14
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: -1@0 heding: $O)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:49:22' prior: 50861441!
test14
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@0 heding: $O)! !

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/15/2021 23:49:46'!
FAILURE!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/15/2021 23:49:46'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:51:14' prior: 50861413!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		]
	].! !

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/15/2021 23:51:18'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/15/2021 23:51:29'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:51:36'!
test15
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@0 heding: $E)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:52:13' prior: 50861493!
test15
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: -1@0 heding: $E)! !

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/15/2021 23:52:17'!
FAILURE!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/15/2021 23:52:17'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/15/2021 23:54:34' prior: 50861462!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/15/2021 23:54:39'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/15/2021 23:54:42'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/15/2021 23:54:45'!
PASSED!

----QUIT----(16 May 2021 01:09:53) CuisUniversity-4532.image priorSource: 16949767!

----STARTUP---- (16 May 2021 10:50:49) as /home/manuel/Facultad/Ingeniería1/Ejercicios/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!

!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:12:04'!
xxxxxxxxxxxxxxxx

	^ ($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:12:04' prior: 50861514!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self xxxxxxxxxxxxxxxx.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:34:38'!
xxxxxxxxxxxxxxxx: aValueY

	^ ($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:34:38' prior: 50861610!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self xxxxxxxxxxxxxxxx: kdkdj.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #xxxxxxxxxxxxxxxx stamp: 'e d r r 5/16/2021 12:34:38'!
xxxxxxxxxxxxxxxx

	^ ($N = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:36:05' prior: 50861636!
xxxxxxxxxxxxxxxx: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:37:55'!
moveOnYAxis: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:37:55' prior: 50861643!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self moveOnYAxis: kdkdj.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #xxxxxxxxxxxxxxxx: stamp: 'e d r r 5/16/2021 12:37:55'!
xxxxxxxxxxxxxxxx: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:40:11'!
CardinalNMoveOnYAxis: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:40:11' prior: 50861690!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self CardinalNMoveOnYAxis: kdkdj.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #moveOnYAxis: stamp: 'e d r r 5/16/2021 12:40:11'!
moveOnYAxis: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:40:40'!
cardinalNMoveOnYAxis: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:40:40' prior: 50861730!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: kdkdj.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [
				position := (position x) @ (position y - 1)
			].
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #CardinalNMoveOnYAxis: stamp: 'e d r r 5/16/2021 12:40:40'!
CardinalNMoveOnYAxis: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:41:42' prior: 50861770!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/16/2021 12:41:46'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:43:13'!
yyyyyyyyyy

	^ ($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y + 1)
			]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:43:13' prior: 50861804!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self yyyyyyyyyy.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:43:29' prior: 50861877!
yyyyyyyyyy

	($S = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + 1)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:44:15'!
cardinalSMoveOnYAxis

	($S = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + 1)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:44:15' prior: 50861884!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #yyyyyyyyyy stamp: 'e d r r 5/16/2021 12:44:15'!
yyyyyyyyyy

	($S = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + 1)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:45:41'!
cardinalSMoveOnYAxis: aValueY

	($S = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + 1)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:45:41' prior: 50861920!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: asdad.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #cardinalSMoveOnYAxis stamp: 'e d r r 5/16/2021 12:45:41'!
cardinalSMoveOnYAxis

	($S = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + 1)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:45:49' prior: 50861955!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			($S = cardinalPoint) ifTrue: [
				position :=  (position x) @ (position y - 1)
			].
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:45:59' prior: 50861948!
cardinalSMoveOnYAxis: aValueY

	($S = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:47:28' prior: 50861985!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/16/2021 12:47:55'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/16/2021 12:47:56'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:50:04'!
cardinalOMoveOnxAxis

	^ ($O = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:50:04' prior: 50862016!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnxAxis.
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:50:20' prior: 50862086!
cardinalOMoveOnxAxis

	($O = cardinalPoint) ifTrue: [
		position :=  (position x + 1) @ (position y)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:51:55'!
cardinalOMoveOnxAxis: aValueX

	($O = cardinalPoint) ifTrue: [
		position :=  (position x + 1) @ (position y)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:51:55' prior: 50862093!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnxAxis: asaas.
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #cardinalOMoveOnxAxis stamp: 'e d r r 5/16/2021 12:51:55'!
cardinalOMoveOnxAxis

	($O = cardinalPoint) ifTrue: [
		position :=  (position x + 1) @ (position y)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:53:02' prior: 50862119!
cardinalOMoveOnxAxis: aValueX

	($O = cardinalPoint) ifTrue: [
		position :=  (position x + aValueX) @ (position y)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:53:14'!
cardinalOMoveOnXAxis: aValueX

	($O = cardinalPoint) ifTrue: [
		position :=  (position x + aValueX) @ (position y)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:53:14' prior: 50862126!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			($O = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: asaas.
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #cardinalOMoveOnxAxis: stamp: 'e d r r 5/16/2021 12:53:14'!
cardinalOMoveOnxAxis: aValueX

	($O = cardinalPoint) ifTrue: [
		position :=  (position x + aValueX) @ (position y)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:53:46' prior: 50862166!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			].
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/16/2021 12:53:49'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:56:08'!
cardinalEMoveOnXAxis

	^ ($E = cardinalPoint) ifTrue: [
				position :=  (position x + 1) @ (position y)
			]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:56:08' prior: 50862193!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:56:22' prior: 50862259!
cardinalEMoveOnXAxis

	($E = cardinalPoint) ifTrue: [
		position :=  (position x + 1) @ (position y)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:56:41'!
cardinalEMoveOnXAxis: aValueX

	($E = cardinalPoint) ifTrue: [
		position :=  (position x + 1) @ (position y)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:56:41' prior: 50862266!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis: asas.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			($E = cardinalPoint) ifTrue: [
				position :=  (position x - 1) @ (position y)
			].
		]
	].! !

!methodRemoval: MarsRover #cardinalEMoveOnXAxis stamp: 'e d r r 5/16/2021 12:56:41'!
cardinalEMoveOnXAxis

	($E = cardinalPoint) ifTrue: [
		position :=  (position x + 1) @ (position y)
	]!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:56:58' prior: 50862289!
cardinalEMoveOnXAxis: aValueX

	($E = cardinalPoint) ifTrue: [
		position :=  (position x + aValueX) @ (position y)
	]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 12:57:11' prior: 50862296!
process: aProcess

	aProcess do: [:s | 
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis: 1.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			self cardinalEMoveOnXAxis: -1.
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/16/2021 12:57:50'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'e d r r 5/16/2021 13:01:15'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:10:59'!
test08CardinalPointNAndCommandFThenMove1OnYaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)! !

!methodRemoval: MarsRoverTest #test08 stamp: 'e d r r 5/16/2021 13:10:59'!
test08
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:13:40'!
test08CardinalPointNAndCommandFThenMove1PositiveOnYaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)! !

!methodRemoval: MarsRoverTest #test08CardinalPointNAndCommandFThenMove1OnYaxis stamp: 'e d r r 5/16/2021 13:13:40'!
test08CardinalPointNAndCommandFThenMove1OnYaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:14:30'!
test09CardinalPointSAndCommandFThenMove1NegativeOnYaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $S)! !

!methodRemoval: MarsRoverTest #test09 stamp: 'e d r r 5/16/2021 13:14:30'!
test09
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $S)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:15:12'!
test10CardinalPointOAndCommandFThenMove1NegativeOnXaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: -1@0 heding: $O)! !

!methodRemoval: MarsRoverTest #test10 stamp: 'e d r r 5/16/2021 13:15:12'!
test10
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: -1@0 heding: $O)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:15:45'!
test11CardinalPointEAndCommandFThenMove1PositiveOnXaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@0 heding: $E)! !

!methodRemoval: MarsRoverTest #test11 stamp: 'e d r r 5/16/2021 13:15:45'!
test11
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@0 heding: $E)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:16:20'!
test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)! !

!methodRemoval: MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYaxis stamp: 'e d r r 5/16/2021 13:16:20'!
test08CardinalPointNAndCommandFThenMove1PositiveOnYaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@1 heding: $N)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:16:27'!
test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $S)! !

!methodRemoval: MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYaxis stamp: 'e d r r 5/16/2021 13:16:27'!
test09CardinalPointSAndCommandFThenMove1NegativeOnYaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 0@-1 heding: $S)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:16:34'!
test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: -1@0 heding: $O)! !

!methodRemoval: MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXaxis stamp: 'e d r r 5/16/2021 13:16:34'!
test10CardinalPointOAndCommandFThenMove1NegativeOnXaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: -1@0 heding: $O)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:16:42'!
test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@0 heding: $E)! !

!methodRemoval: MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXaxis stamp: 'e d r r 5/16/2021 13:16:42'!
test11CardinalPointEAndCommandFThenMove1PositiveOnXaxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'f'.
	
	self assert: (marsRover isAt: 1@0 heding: $E)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:19:40'!
test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 0@-1 heding: $N)! !

!methodRemoval: MarsRoverTest #test12 stamp: 'e d r r 5/16/2021 13:19:40'!
test12
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 0@-1 heding: $N)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:20:37'!
test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 0@1 heding: $S)! !

!methodRemoval: MarsRoverTest #test13 stamp: 'e d r r 5/16/2021 13:20:37'!
test13
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 0@1 heding: $S)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:21:20'!
test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@0 heding: $O)! !

!methodRemoval: MarsRoverTest #test14 stamp: 'e d r r 5/16/2021 13:21:20'!
test14
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: 1@0 heding: $O)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'e d r r 5/16/2021 13:22:15'!
test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: -1@0 heding: $E)! !

!methodRemoval: MarsRoverTest #test15 stamp: 'e d r r 5/16/2021 13:22:16'!
test15
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'b'.
	
	self assert: (marsRover isAt: -1@0 heding: $E)!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'e d r r 5/16/2021 13:24:48'!
PASSED!

----QUIT----(16 May 2021 13:28:49) CuisUniversity-4532.image priorSource: 16958218!

----STARTUP---- (16 May 2021 13:29:08) as /home/manuel/Facultad/Ingeniería1/Ejercicios/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!


!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'e d r r 5/16/2021 13:29:11'!
PASSED!

----STARTUP---- (16 May 2021 14:37:18) as /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!


!classRemoval: #MarsRover stamp: 'bi 5/16/2021 14:37:35'!
Object subclass: #MarsRover
	instanceVariableNames: 'position cardinalPoint'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #MarsRoverTest stamp: 'bi 5/16/2021 14:37:36'!
TestCase subclass: #MarsRoverTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

----End fileIn of /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/Mars-Rover.st----!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 14:59:00'!
test16MarsRoverStopProcessingOnInvalidInstruccion
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: $N.
	
	marsRover process: 'rf'.
	
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:06:31' prior: 50863022!
test16MarsRoverStopProcessingOnInvalidInstruccion
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: $N.
	
	self 
		should: [marsRover process: 'rf']
		raise: Error
		withExceptionDo: [ :anError | 
						self assert: 	anError messageText equals: MarsRover invalidInstruccionErrorDescription .
						self assert: marsRover position = (1@1) .
						"self assert: marsRover  = (1@1) ."
					].
	! !
!MarsRover methodsFor: 'accessing' stamp: 'bi 5/16/2021 15:07:49'!
position

	^position! !
!MarsRover methodsFor: 'accessing' stamp: 'bi 5/16/2021 15:07:59'!
cardinalPoint

	^cardinalPoint ! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:08:44' prior: 50863030!
test16MarsRoverStopProcessingOnInvalidInstruccion
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: $N.
	
	self 
		should: [marsRover process: 'fe']
		raise: Error
		withExceptionDo: [ :anError | 
						self assert: 	anError messageText equals: MarsRover invalidInstruccionErrorDescription .
						self assert: marsRover position = (1@2) .
						self assert: marsRover cardinalPoint = $N .
					].
	! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:10:53'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:10:53'!
FAILURE!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:10:53'!
FAILURE!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:18:09' prior: 50862946!
process: aProcess

	aProcess do: [:s | 
		(#($f $b $l $r) includes: s) ifFalse: [self error: 'error' ].
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis: 1.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			self cardinalEMoveOnXAxis: -1.
		]
	].! !
!MarsRover class methodsFor: 'message assertions' stamp: 'bi 5/16/2021 15:19:36'!
invalidInstructionErrorDescription
	
	^'aInstruction not valid'! !

!methodRemoval: MarsRover class #invalidInstructionErrorDescription stamp: 'bi 5/16/2021 15:20:00'!
invalidInstructionErrorDescription
	
	^'aInstruction not valid'!
!MarsRover class methodsFor: 'message assertions' stamp: 'bi 5/16/2021 15:20:27'!
invalidInstructionErrorDescription
	
	^'aInstruction not valid'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:21:50' prior: 50863135!
process: aProcess

	aProcess do: [:s | 
		(#($f $b $l $r) includes: s) ifFalse: [self error: self invalidInstructionErrorDescription ].
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis: 1.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			self cardinalEMoveOnXAxis: -1.
		]
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:22:13' prior: 50863166!
process: aProcess

	aProcess do: [:s | 
		(#($f $b $l $r) includes: s) ifFalse: [self error: self invalidInstructionErrorDescription ].
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis: 1.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			self cardinalEMoveOnXAxis: -1.
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:22:26'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:22:26'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:22:26'!
ERROR!

!methodRemoval: MarsRover class #invalidInstructionErrorDescription stamp: 'bi 5/16/2021 15:23:13'!
invalidInstructionErrorDescription
	
	^'aInstruction not valid'!
!MarsRover methodsFor: 'nil' stamp: 'bi 5/16/2021 15:23:19'!
nvalidInstructionErrorDescription
	
	^'aInstruction not valid'! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:23:49'!
invalidInstructionErrorDescription
	
	^'aInstruction not valid'! !

!methodRemoval: MarsRover #nvalidInstructionErrorDescription stamp: 'bi 5/16/2021 15:23:51'!
nvalidInstructionErrorDescription
	
	^'aInstruction not valid'!
!MarsRover methodsFor: 'assertions' stamp: 'bi 5/16/2021 15:24:52'!
assertCardinalPointValid: aCardinalPoint
	
	(#($N $S $E $O) includes: aCardinalPoint) ifFalse: [ ].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:25:22' prior: 50863184!
process: aProcess

	aProcess do: [:s | 
		
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis: 1.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			self cardinalEMoveOnXAxis: -1.
		]
	].! !
!MarsRover methodsFor: 'assertions' stamp: 'bi 5/16/2021 15:26:19'!
assertInstructionValid: aInstruction
	
	(#($f $b $l $r) includes: aInstruction) ifFalse: [self error: self invalidInstructionErrorDescription ].! !

!methodRemoval: MarsRover #assertCardinalPointValid: stamp: 'bi 5/16/2021 15:26:39'!
assertCardinalPointValid: aCardinalPoint
	
	(#($N $S $E $O) includes: aCardinalPoint) ifFalse: [ ].!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:26:56' prior: 50863293!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			self cardinalNMoveOnYAxis: 1.
			self cardinalSMoveOnYAxis: -1.
			self cardinalOMoveOnXAxis: -1.
			self cardinalEMoveOnXAxis: 1.
		].
		($b = s) ifTrue: [
			self cardinalNMoveOnYAxis: -1.
			self cardinalSMoveOnYAxis: 1.
			self cardinalOMoveOnXAxis: 1.
			self cardinalEMoveOnXAxis: -1.
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:27:06'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:27:06'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:27:06'!
ERROR!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:28:11' prior: 50863053!
test16MarsRoverStopProcessingOnInvalidInstruccion
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: $N.
	
	self 
		should: [marsRover process: 'fe']
		raise: Error
		withExceptionDo: [ :anError | 
						self assert: 	anError messageText equals: marsRover invalidInstruccionErrorDescription .
						self assert: marsRover position = (1@2) .
						self assert: marsRover cardinalPoint = $N .
					].
	! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:28:25' prior: 50863402!
test16MarsRoverStopProcessingOnInvalidInstruccion
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: $N.
	
	self 
		should: [marsRover process: 'fe']
		raise: Error
		withExceptionDo: [ :anError | 
						self assert: 	anError messageText equals: MarsRover invalidInstruccionErrorDescription .
						self assert: marsRover position = (1@2) .
						self assert: marsRover cardinalPoint = $N .
					].
	! !
!MarsRover class methodsFor: 'message assertions' stamp: 'bi 5/16/2021 15:29:04'!
invalidInstructionErrorDescription
	
	^'aInstruction not valid'! !
!MarsRover methodsFor: 'assertions' stamp: 'bi 5/16/2021 15:29:17' prior: 50863307!
assertInstructionValid: aInstruction
	
	(#($f $b $l $r) includes: aInstruction) ifFalse: [self error: MarsRover invalidInstructionErrorDescription ].! !

!methodRemoval: MarsRover #invalidInstructionErrorDescription stamp: 'bi 5/16/2021 15:29:21'!
invalidInstructionErrorDescription
	
	^'aInstruction not valid'!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:29:43'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:29:43'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:29:43'!
ERROR!
!MarsRover methodsFor: 'assertions' stamp: 'bi 5/16/2021 15:30:12' prior: 50863439!
assertInstructionValid: aInstruction
	
	(#($f $b $l $r) includes: aInstruction) ifFalse: [self error: MarsRover invalidInstructionErrorDescription ].! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:30:39' prior: 50863418!
test16MarsRoverStopProcessingOnInvalidInstruccion
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: $N.
	
	self 
		should: [marsRover process: 'fe']
		raise: Error
		withExceptionDo: [ :anError | 
						self assert: 	anError messageText equals: MarsRover invalidInstructionErrorDescription .
						self assert: marsRover position = (1@2) .
						self assert: marsRover cardinalPoint = $N .
					].
	! !

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:30:41'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:30:41'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 15:31:10' prior: 50863525!
test16MarsRoverStopProcessingOnInvalidInstruccion
	
	| marsRover |
	
	marsRover := MarsRover at: 1@1 heading: $N.
	
	self 
		should: [marsRover process: 'feb']
		raise: Error
		withExceptionDo: [ :anError | 
						self assert: 	anError messageText equals: MarsRover invalidInstructionErrorDescription .
						self assert: marsRover position = (1@2) .
						self assert: marsRover cardinalPoint = $N .
					].
	! !

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 15:31:12'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 15:31:12'!
PASSED!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:10:42'!
moveOnXAxis: aValueX

	position :=  (position x + aValueX) @ (position y)! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:11:02'!
moveOnYAxis: aValueY

	position :=  (position x) @ (position y  + aValueY )! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:14:22' prior: 50863321!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		]
	].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:14:34' prior: 50863699!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		]
	].! !

!methodRemoval: MarsRover #cardinalEMoveOnXAxis: stamp: 'bi 5/16/2021 16:14:42'!
cardinalEMoveOnXAxis: aValueX

	($E = cardinalPoint) ifTrue: [
		position :=  (position x + aValueX) @ (position y)
	]!

!methodRemoval: MarsRover #cardinalNMoveOnYAxis: stamp: 'bi 5/16/2021 16:14:43'!
cardinalNMoveOnYAxis: aValueY

	($N = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]!

!methodRemoval: MarsRover #cardinalOMoveOnXAxis: stamp: 'bi 5/16/2021 16:14:44'!
cardinalOMoveOnXAxis: aValueX

	($O = cardinalPoint) ifTrue: [
		position :=  (position x + aValueX) @ (position y)
	]!

!methodRemoval: MarsRover #cardinalSMoveOnYAxis: stamp: 'bi 5/16/2021 16:14:46'!
cardinalSMoveOnYAxis: aValueY

	($S = cardinalPoint) ifTrue: [
		position :=  (position x) @ (position y + aValueY)
	]!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:14:51'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:14:51'!
PASSED!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:18:09' prior: 50863721!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		] ifFalse: [
			($b = s) ifTrue: [
				($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
				($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
				($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
				($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			]
		]
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:18:18'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:18:18'!
PASSED!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:19:11' prior: 50863830!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:19:15'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:19:15'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:24:19'!
test17CardinalPointNAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $O)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:26:32'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:26:32'!
FAILURE!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:26:32'!
FAILURE!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:28:41' prior: 50863914!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ cardinalPoint := $O] .
		].
	].! !

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:28:43'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:28:46'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:29:25'!
test18CardinalPointSAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $E)! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:29:47' prior: 50864075!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ cardinalPoint := $O] .
			($S = cardinalPoint) ifTrue: [ cardinalPoint := $E] .
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:29:58'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:29:58'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:30:30'!
test19CardinalPointOAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $S)! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:30:48' prior: 50864177!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ cardinalPoint := $O] .
			($S = cardinalPoint) ifTrue: [ cardinalPoint := $E] .
			($O = cardinalPoint) ifTrue: [ cardinalPoint := $S] .
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:30:52'!
FAILURE!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:30:52'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:30:52'!
FAILURE!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:33:52' prior: 50864281!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ cardinalPoint := $O] 
				ifFalse: [
					($S = cardinalPoint) ifTrue: [ cardinalPoint := $E]
						ifFalse: [
							($O = cardinalPoint) ifTrue: [ cardinalPoint := $S] .
						].
				].
			 
			
		].
	].! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:35:33' prior: 50864385!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) ifTrue: [ cardinalPoint := $S] .
				].
			].
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:35:38'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:35:38'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:36:18'!
test20CardinalPointEAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $N)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:36:29'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:36:29'!
FAILURE!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:36:29'!
FAILURE!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:38:57' prior: 50864415!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					]
				].
			].
		].
	].! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:41:01' prior: 50864605!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					].
				].
			].
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:42:16'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:42:16'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:44:51'!
test21CardinalPointNAndCommandRThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 0@0 heding: $E)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:45:00'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateLeft stamp: 'bi 5/16/2021 16:45:00'!
FAILURE!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateLeft stamp: 'bi 5/16/2021 16:45:00'!
FAILURE!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:46:03' prior: 50864638!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					].
				].
			].
		].
		($r = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $E
			]
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:46:08'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateLeft stamp: 'bi 5/16/2021 16:46:08'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:47:31'!
test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 0@0 heding: $O)! !
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:48:01'!
test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 0@0 heding: $E)! !

!methodRemoval: MarsRoverTest #test21CardinalPointNAndCommandRThenRotateLeft stamp: 'bi 5/16/2021 16:48:01'!
test21CardinalPointNAndCommandRThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 0@0 heding: $E)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:48:28'!
test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $O)! !

!methodRemoval: MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:48:28'!
test17CardinalPointNAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $N.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $O)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:48:38'!
test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $E)! !

!methodRemoval: MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:48:38'!
test18CardinalPointSAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $S.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $E)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:48:46'!
test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $S)! !

!methodRemoval: MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:48:46'!
test19CardinalPointOAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $S)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:48:53'!
test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $N)! !

!methodRemoval: MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeft stamp: 'bi 5/16/2021 16:48:53'!
test20CardinalPointEAndCommandLThenRotateLeft
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'l'.
	
	self assert: (marsRover isAt: 0@0 heding: $N)!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:49:33'!
test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $O.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 0@0 heding: $N)! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 16:49:36'!
PASSED!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 16:49:36'!
FAILURE!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 16:49:36'!
FAILURE!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 16:51:50' prior: 50864838!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					].
				].
			].
		].
		($r = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $E
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $O
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $N
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $S].
					].
				].
			].
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 16:51:55'!
PASSED!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 16:51:55'!
PASSED!
!MarsRoverTest methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 16:52:14'!
test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS
	
	| marsRover |
	
	marsRover := MarsRover at: 0@0 heading: $E.
	
	marsRover process: 'r'.
	
	self assert: (marsRover isAt: 0@0 heding: $S)! !

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 16:52:16'!
PASSED!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 16:52:16'!
PASSED!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/16/2021 17:03:40' prior: 50863007!
at: aPosition heading: aCardinalPoint 
	
	self assertPositionIsAPoint: aPosition .
	self assertPositionCoordinatesIsIntenger: aPosition .
	self assertCardinalPointValid: aCardinalPoint .

	^self new initializeAt: aPosition heading: aCardinalPoint
! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 17:03:47'!
PASSED!

Object subclass: #CardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #CardinalPoint category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:10:38'!
Object subclass: #CardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

Object subclass: #MarsRoverCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:11:06'!
Object subclass: #MarsRoverCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #CardinalPoint stamp: 'bi 5/16/2021 17:11:10'!
Object subclass: #CardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRoverCardinalPoint class methodsFor: 'nil' stamp: 'bi 5/16/2021 17:12:22'!
for: aMarsRover

	^self new initializeWith: aMarsRover .! !
!MarsRoverCardinalPoint methodsFor: 'initialization' stamp: 'bi 5/16/2021 17:15:52'!
initializeWith: aMarsRover

	marsRover := aMarsRover! !
!MarsRoverCardinalPoint methodsFor: 'operations' stamp: 'bi 5/16/2021 17:19:22'!
rotateLeft

	self subclassResponsibility .! !
!MarsRoverCardinalPoint methodsFor: 'operations' stamp: 'bi 5/16/2021 17:19:43'!
rotateRight

	self subclassResponsibility .! !

MarsRoverCardinalPoint subclass: #NorthCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #NorthCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:20:15'!
MarsRoverCardinalPoint subclass: #NorthCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #NCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #NCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:20:26'!
MarsRoverCardinalPoint subclass: #NCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classRemoval: #NorthCardinalPoint stamp: 'bi 5/16/2021 17:20:29'!
MarsRoverCardinalPoint subclass: #NorthCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #SCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #SCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:20:33'!
MarsRoverCardinalPoint subclass: #SCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #OCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #OCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:20:36'!
MarsRoverCardinalPoint subclass: #OCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #ECardinalPoint category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:20:38'!
MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

Object subclass: #MarsRoverLocation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverLocation category: 'Mars-Rover' stamp: 'bi 5/16/2021 17:24:48'!
Object subclass: #MarsRoverLocation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!methodRemoval: MarsRoverCardinalPoint #rotateLeft stamp: 'bi 5/16/2021 17:25:59'!
rotateLeft

	self subclassResponsibility .!

!methodRemoval: MarsRoverCardinalPoint #rotateRight stamp: 'bi 5/16/2021 17:25:59'!
rotateRight

	self subclassResponsibility .!

----QUIT----(16 May 2021 17:27:58) CuisUniversity-4532.image priorSource: 16994292!

----STARTUP---- (16 May 2021 19:51:17) as /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!

!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 20:03:27' prior: 50865157!
process: aProcess

	"aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					].
				].
			].
		].
		($r = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $E
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $O
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $N
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $S].
					].
				].
			].
		].
	]."! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 20:04:09' prior: 50865648!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					].
				].
			].
		].
		($r = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $E
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $O
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $N
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $S].
					].
				].
			].
		].
	].! !
!ECardinalPoint methodsFor: 'no messages' stamp: 'bi 5/16/2021 20:35:18'!
cardinalPointToYourRight

	^SCardinalPoint new! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 20:35:36' prior: 50865735!
cardinalPointToYourRight

	^SCardinalPoint new for: self! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 20:36:38' prior: 50865740!
cardinalPointToYourRight

	^SCardinalPoint new initializeWith: marsRover.! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 20:37:09'!
cardinalPointToYourLeft

	^NCardinalPoint new initializeWith: marsRover.! !
!NCardinalPoint methodsFor: 'nil' stamp: 'bi 5/16/2021 20:37:26'!
cardinalPointToYourLeft

	^OCardinalPoint new initializeWith: marsRover.! !
!NCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 20:37:33'!
cardinalPointToYourRight

	^ECardinalPoint new initializeWith: marsRover.! !
!OCardinalPoint methodsFor: 'no messages' stamp: 'bi 5/16/2021 20:37:58'!
cardinalPointToYourRight

	^NCardinalPoint new initializeWith: marsRover.! !
!OCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 20:38:06'!
cardinalPointToYourLeft

	^SCardinalPoint new initializeWith: marsRover.! !
!SCardinalPoint methodsFor: 'no messages' stamp: 'bi 5/16/2021 20:38:55'!
cardinalPointToYourRight

	^OCardinalPoint new initializeWith: marsRover.! !
!SCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 20:39:02'!
cardinalPointToYourLeft

	^ECardinalPoint new initializeWith: marsRover.! !
!MarsRoverCardinalPoint methodsFor: 'initialization' stamp: 'bi 5/16/2021 20:39:45'!
cardinalPointToYourLeft

	self subclassResponsibility .! !
!MarsRoverCardinalPoint methodsFor: 'operations' stamp: 'bi 5/16/2021 20:39:54'!
cardinalPointToYourRight

	self subclassResponsibility .! !

!classRemoval: #MarsRoverLocation stamp: 'bi 5/16/2021 20:40:14'!
Object subclass: #MarsRoverLocation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/16/2021 20:51:26' prior: 50865399!
at: aPosition heading: aCardinalPoint 
	
	self assertPositionIsAPoint: aPosition .
	self assertPositionCoordinatesIsIntenger: aPosition .
	self assertCardinalPointValid: aCardinalPoint .

	^self new initializeAt: aPosition heading: (self getClassCardinalPoint: aCardinalPoint)
	"^self new initializeAt: aPosition heading: aCardinalPoint"
! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/16/2021 20:52:51'!
getClassCardinalPoint: aCardinalPoint 
	
	aCardinalPoint = $N ifTrue: [ ^NCardinalPoint new ].
	aCardinalPoint = $S ifTrue: [ ^SCardinalPoint new ].
	aCardinalPoint = $O ifTrue: [ ^OCardinalPoint new ].
	aCardinalPoint = $E ifTrue: [ ^ECardinalPoint new ].

! !
!MarsRover class methodsFor: 'initialize' stamp: 'bi 5/16/2021 20:56:57' prior: 50865816!
getClassCardinalPoint: aCardinalPoint 
	
	aCardinalPoint = $N ifTrue: [ ^NCardinalPoint for: self ].
	aCardinalPoint = $S ifTrue: [ ^SCardinalPoint for: self ].
	aCardinalPoint = $O ifTrue: [ ^OCardinalPoint for: self ].
	aCardinalPoint = $E ifTrue: [ ^ECardinalPoint for: self ].

! !
!MarsRoverCardinalPoint methodsFor: 'inquiries' stamp: 'bi 5/16/2021 21:11:05'!
cardinalPointCharacter

	self subclassResponsibility .! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:11:39' overrides: 50865839!
cardinalPointCharacter

	^$E.! !
!NCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:11:51' overrides: 50865839!
cardinalPointCharacter

	^$N.! !
!OCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:12:01' overrides: 50865839!
cardinalPointCharacter

	^$O.! !
!SCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:12:10' overrides: 50865839!
cardinalPointCharacter

	^$S.! !
!MarsRover methodsFor: 'comparing' stamp: 'bi 5/16/2021 21:12:59' prior: 50862940!
isAt: aPosition heding: aCardinalPoint 
	
	^position = aPosition and: [cardinalPoint = aCardinalPoint cardinalPointCharacter ].
	"^position = aPosition and: [cardinalPoint = aCardinalPoint ]."! !
!MarsRover methodsFor: 'accessing' stamp: 'bi 5/16/2021 21:16:11' prior: 50863048!
cardinalPoint

	^cardinalPoint cardinalPointCharacter! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:23:26' prior: 50865692!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint cardinalPointCharacter) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			cardinalPoint := cardinalPoint cardinalPointToYourLeft .
		].
		($r = s) ifTrue: [
			cardinalPoint := cardinalPoint cardinalPointToYourRight .
		].
	].
	"aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					].
				].
			].
		].
		($r = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $E
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $O
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $N
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $S].
					].
				].
			].
		].
	]."! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 21:23:37'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 21:23:37'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 21:23:37'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 21:23:37'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 21:23:37'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 21:23:37'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 21:23:37'!
ERROR!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:23:52'!
ERROR!

aCardinalPoint cardinalPointCharacter!

aCardinalPoint cardinalPointCharacter!
!MarsRover methodsFor: 'comparing' stamp: 'bi 5/16/2021 21:26:07' prior: 50865863!
isAt: aPosition heding: aCardinalPoint 
	
	^position = aPosition and: [cardinalPoint = (aCardinalPoint cardinalPointCharacter) ].
	"^position = aPosition and: [cardinalPoint = aCardinalPoint ]."! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 21:26:24'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 21:26:24'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 21:26:24'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 21:26:24'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 21:26:24'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 21:26:24'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 21:26:24'!
ERROR!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:26:26'!
ERROR!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:26:49'!
ERROR!
!MarsRover methodsFor: 'comparing' stamp: 'bi 5/16/2021 21:28:07' prior: 50866049!
isAt: aPosition heding: aCardinalPoint 
	
	^position = aPosition and: [cardinalPoint cardinalPointCharacter = aCardinalPoint ].
	"^position = aPosition and: [cardinalPoint = aCardinalPoint ]."! !
!MarsRover methodsFor: 'comparing' stamp: 'bi 5/16/2021 21:28:24' prior: 50866159!
isAt: aPosition heding: aCardinalPoint 
	
	^position = aPosition and: [self cardinalPoint = aCardinalPoint ].
	"^position = aPosition and: [cardinalPoint = aCardinalPoint ]."! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:29:23' prior: 50865877!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = self cardinalPoint ) ifTrue: [ self moveOnYAxis: 1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			cardinalPoint := cardinalPoint cardinalPointToYourLeft .
		].
		($r = s) ifTrue: [
			cardinalPoint := cardinalPoint cardinalPointToYourRight .
		].
	].
	"aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $O
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $E
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $S
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $N].
					].
				].
			].
		].
		($r = s) ifTrue: [
			($N = cardinalPoint) 
			ifTrue: [ 
				cardinalPoint := $E
			] ifFalse: [
				($S = cardinalPoint) 
				ifTrue: [ 
					cardinalPoint := $O
				] ifFalse: [
					($O = cardinalPoint) 
					ifTrue: [ 
						cardinalPoint := $N
					] ifFalse: [
						($E = cardinalPoint) ifTrue: [cardinalPoint := $S].
					].
				].
			].
		].
	]."! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 21:29:39'!
PASSED!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 21:29:39'!
PASSED!
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:32:50' prior: 50865750 overrides: 50865786!
cardinalPointToYourLeft

	marsRover NcardinalPointRotateLeft
	"^NCardinalPoint new initializeWith: marsRover."! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:33:36' prior: 50866177!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = self cardinalPoint ) ifTrue: [ self moveOnYAxis: 1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			cardinalPoint cardinalPointToYourLeft.
			"cardinalPoint := cardinalPoint cardinalPointToYourLeft ."
		].
		($r = s) ifTrue: [
			cardinalPoint cardinalPointToYourRight .
			"cardinalPoint := cardinalPoint cardinalPointToYourRight ."
		].
	].! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:33:39' prior: 50866347!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = self cardinalPoint ) ifTrue: [ self moveOnYAxis: 1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			cardinalPoint cardinalPointToYourLeft .
			"cardinalPoint := cardinalPoint cardinalPointToYourLeft ."
		].
		($r = s) ifTrue: [
			cardinalPoint cardinalPointToYourRight .
			"cardinalPoint := cardinalPoint cardinalPointToYourRight ."
		].
	].! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:34:17' prior: 50866340 overrides: 50865786!
cardinalPointToYourLeft

	marsRover EcardinalPointRotateLeft
	"^NCardinalPoint new initializeWith: marsRover."! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:35:56'!
EcardinalPointRotateLeft

	cardinalPoint := NCardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:36:28'!
EcardinalPointRotateRight

	cardinalPoint := SCardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:37:03'!
NcardinalPointRotateRight

	cardinalPoint := ECardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:37:14'!
NcardinalPointRotateLeft

	cardinalPoint := OCardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:37:34'!
OcardinalPointRotateLeft

	cardinalPoint := SCardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:37:44'!
OcardinalPointRotateRight

	cardinalPoint := NCardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:38:33'!
ScardinalPointRotateRight

	cardinalPoint := OCardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:38:43'!
ScardinalPointRotateLeft

	cardinalPoint := ECardinalPoint new initializeWith: self.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:06'!
ECardinalPointRotateLeft

	cardinalPoint := NCardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #EcardinalPointRotateLeft stamp: 'bi 5/16/2021 21:39:06'!
EcardinalPointRotateLeft

	cardinalPoint := NCardinalPoint new initializeWith: self.!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:21'!
ECardinalPointRotateRight

	cardinalPoint := SCardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #EcardinalPointRotateRight stamp: 'bi 5/16/2021 21:39:21'!
EcardinalPointRotateRight

	cardinalPoint := SCardinalPoint new initializeWith: self.!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:26'!
NCardinalPointRotateLeft

	cardinalPoint := OCardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #NcardinalPointRotateLeft stamp: 'bi 5/16/2021 21:39:26'!
NcardinalPointRotateLeft

	cardinalPoint := OCardinalPoint new initializeWith: self.!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:31'!
NCardinalPointRotateRight

	cardinalPoint := ECardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #NcardinalPointRotateRight stamp: 'bi 5/16/2021 21:39:31'!
NcardinalPointRotateRight

	cardinalPoint := ECardinalPoint new initializeWith: self.!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:36'!
OCardinalPointRotateLeft

	cardinalPoint := SCardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #OcardinalPointRotateLeft stamp: 'bi 5/16/2021 21:39:36'!
OcardinalPointRotateLeft

	cardinalPoint := SCardinalPoint new initializeWith: self.!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:40'!
OCardinalPointRotateRight

	cardinalPoint := NCardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #OcardinalPointRotateRight stamp: 'bi 5/16/2021 21:39:40'!
OcardinalPointRotateRight

	cardinalPoint := NCardinalPoint new initializeWith: self.!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:47'!
SCardinalPointRotateLeft

	cardinalPoint := ECardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #ScardinalPointRotateLeft stamp: 'bi 5/16/2021 21:39:47'!
ScardinalPointRotateLeft

	cardinalPoint := ECardinalPoint new initializeWith: self.!
!MarsRover methodsFor: 'operations' stamp: 'bi 5/16/2021 21:39:51'!
SCardinalPointRotateRight

	cardinalPoint := OCardinalPoint new initializeWith: self.! !

!methodRemoval: MarsRover #ScardinalPointRotateRight stamp: 'bi 5/16/2021 21:39:51'!
ScardinalPointRotateRight

	cardinalPoint := OCardinalPoint new initializeWith: self.!
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:40:04' prior: 50866410 overrides: 50865786!
cardinalPointToYourLeft

	marsRover ECardinalPointRotateLeft
	"^NCardinalPoint new initializeWith: marsRover."! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:40:28' prior: 50865745 overrides: 50865791!
cardinalPointToYourRight

	marsRover ECardinalPointRotateRight
	"^SCardinalPoint new initializeWith: marsRover."! !
!NCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:40:45' prior: 50865755 overrides: 50865786!
cardinalPointToYourLeft

	marsRover NCardinalPointRotateLeft
	"^OCardinalPoint new initializeWith: marsRover."! !
!NCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:40:56' prior: 50865760 overrides: 50865791!
cardinalPointToYourRight

	marsRover NCardinalPointRotateRight 
	"^ECardinalPoint new initializeWith: marsRover."! !
!OCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:41:10' prior: 50865770 overrides: 50865786!
cardinalPointToYourLeft

	marsRover OCardinalPointRotateLeft
	"^SCardinalPoint new initializeWith: marsRover."! !
!OCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:41:20' prior: 50865765 overrides: 50865791!
cardinalPointToYourRight

	marsRover OCardinalPointRotateRight
	"^NCardinalPoint new initializeWith: marsRover."! !
!SCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:41:33' prior: 50865780 overrides: 50865786!
cardinalPointToYourLeft

	marsRover SCardinalPointRotateLeft
	"^ECardinalPoint new initializeWith: marsRover."! !
!SCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:41:45' prior: 50865775 overrides: 50865791!
cardinalPointToYourRight

	marsRover SCardinalPointRotateRight 
	"^OCardinalPoint new initializeWith: marsRover."! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 21:41:53'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 21:41:53'!
ERROR!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:43:01'!
ERROR!
!MarsRoverCardinalPoint class methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:48:50' prior: 50865534!
for: aMarsRover

	self subclassResponsibility .! !
!ECardinalPoint class methodsFor: 'no messages' stamp: 'bi 5/16/2021 21:49:56' overrides: 50866706!
for: aMarsRover

	^self new initializeWith: aMarsRover .! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:50:38' overrides: 50865539!
initializeWith: aMarsRover

	marsRover := aMarsRover ! !

!methodRemoval: ECardinalPoint #initializeWith: stamp: 'bi 5/16/2021 21:52:36'!
initializeWith: aMarsRover

	marsRover := aMarsRover !
!NCardinalPoint class methodsFor: 'no messages' stamp: 'bi 5/16/2021 21:52:48' overrides: 50866706!
for: aMarsRover

	^self new initializeWith: aMarsRover .! !
!OCardinalPoint class methodsFor: 'no messages' stamp: 'bi 5/16/2021 21:52:51' overrides: 50866706!
for: aMarsRover

	^self new initializeWith: aMarsRover .! !
!SCardinalPoint class methodsFor: 'no messages' stamp: 'bi 5/16/2021 21:52:54' overrides: 50866706!
for: aMarsRover

	^self new initializeWith: aMarsRover .! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 21:53:01'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 21:53:01'!
ERROR!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 21:53:08'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:53:08'!
ERROR!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 21:53:08'!
ERROR!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 21:53:08'!
ERROR!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 21:53:08'!
ERROR!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 21:53:08'!
ERROR!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 21:53:08'!
ERROR!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 21:53:08'!
ERROR!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 21:53:08'!
ERROR!
!MarsRoverCardinalPoint class methodsFor: 'as yet unclassified' stamp: 'bi 5/16/2021 21:54:13' prior: 50866706!
for: aMarsRover

	^self new initializeWith: aMarsRover .! !

!methodRemoval: ECardinalPoint class #for: stamp: 'bi 5/16/2021 21:54:19'!
for: aMarsRover

	^self new initializeWith: aMarsRover .!

!methodRemoval: NCardinalPoint class #for: stamp: 'bi 5/16/2021 21:54:21'!
for: aMarsRover

	^self new initializeWith: aMarsRover .!

!methodRemoval: OCardinalPoint class #for: stamp: 'bi 5/16/2021 21:54:24'!
for: aMarsRover

	^self new initializeWith: aMarsRover .!

!methodRemoval: SCardinalPoint class #for: stamp: 'bi 5/16/2021 21:54:26'!
for: aMarsRover

	^self new initializeWith: aMarsRover .!

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/16/2021 21:55:28'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/16/2021 21:55:28'!
ERROR!

----QUIT----(16 May 2021 21:55:53) CuisUniversity-4532.image priorSource: 17087640!

----STARTUP---- (17 May 2021 14:03:35) as /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!


MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #ECardinalPoint category: 'Mars-Rover' stamp: 'bi 5/17/2021 14:19:01'!
MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

Object subclass: #MarsRoverCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #MarsRoverCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/17/2021 14:19:33'!
Object subclass: #MarsRoverCardinalPoint
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #ECardinalPoint category: 'Mars-Rover' stamp: 'bi 5/17/2021 14:19:38'!
MarsRoverCardinalPoint subclass: #ECardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #NCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #NCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/17/2021 14:19:43'!
MarsRoverCardinalPoint subclass: #NCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #OCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #OCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/17/2021 14:19:47'!
MarsRoverCardinalPoint subclass: #OCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

MarsRoverCardinalPoint subclass: #SCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!

!classDefinition: #SCardinalPoint category: 'Mars-Rover' stamp: 'bi 5/17/2021 14:19:51'!
MarsRoverCardinalPoint subclass: #SCardinalPoint
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Mars-Rover'!
!MarsRoverCardinalPoint class methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 14:22:36' prior: 50866930!
for: aMarsRover

	^self new initializeWith: aMarsRover .! !

----QUIT----(17 May 2021 14:24:00) CuisUniversity-4532.image priorSource: 17132621!

----STARTUP---- (17 May 2021 15:46:53) as /home/bingani/Documentos/Ing 1/PRACTICAS/inge1-ejercicios-1C2021/04-MarsRover/Implementacion/CuisUniversity-4532.image!


!methodRemoval: MarsRover #ECardinalPointRotateLeft stamp: 'bi 5/17/2021 15:47:08'!
ECardinalPointRotateLeft

	cardinalPoint := NCardinalPoint new initializeWith: self.!

!methodRemoval: MarsRover #ECardinalPointRotateRight stamp: 'bi 5/17/2021 15:47:10'!
ECardinalPointRotateRight

	cardinalPoint := SCardinalPoint new initializeWith: self.!

!methodRemoval: MarsRover #NCardinalPointRotateLeft stamp: 'bi 5/17/2021 15:47:11'!
NCardinalPointRotateLeft

	cardinalPoint := OCardinalPoint new initializeWith: self.!

!methodRemoval: MarsRover #NCardinalPointRotateRight stamp: 'bi 5/17/2021 15:47:13'!
NCardinalPointRotateRight

	cardinalPoint := ECardinalPoint new initializeWith: self.!

!methodRemoval: MarsRover #OCardinalPointRotateLeft stamp: 'bi 5/17/2021 15:47:15'!
OCardinalPointRotateLeft

	cardinalPoint := SCardinalPoint new initializeWith: self.!

!methodRemoval: MarsRover #OCardinalPointRotateRight stamp: 'bi 5/17/2021 15:47:19'!
OCardinalPointRotateRight

	cardinalPoint := NCardinalPoint new initializeWith: self.!

!methodRemoval: MarsRover #SCardinalPointRotateLeft stamp: 'bi 5/17/2021 15:47:21'!
SCardinalPointRotateLeft

	cardinalPoint := ECardinalPoint new initializeWith: self.!

!methodRemoval: MarsRover #SCardinalPointRotateRight stamp: 'bi 5/17/2021 15:47:24'!
SCardinalPointRotateRight

	cardinalPoint := OCardinalPoint new initializeWith: self.!
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:47:36' prior: 50866545 overrides: 50865786!
cardinalPointToYourLeft

	^NCardinalPoint new initializeWith: marsRover.! !
!ECardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:47:45' prior: 50866553 overrides: 50865791!
cardinalPointToYourRight

	^SCardinalPoint new initializeWith: marsRover.! !
!NCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:47:54' prior: 50866561 overrides: 50865786!
cardinalPointToYourLeft

	^OCardinalPoint new initializeWith: marsRover.! !
!NCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:48:00' prior: 50866569 overrides: 50865791!
cardinalPointToYourRight

	^ECardinalPoint new initializeWith: marsRover.! !
!OCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:48:08' prior: 50866577 overrides: 50865786!
cardinalPointToYourLeft

	^SCardinalPoint new initializeWith: marsRover.! !
!OCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:48:13' prior: 50866585 overrides: 50865791!
cardinalPointToYourRight

	^NCardinalPoint new initializeWith: marsRover.! !
!SCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:48:21' prior: 50866593 overrides: 50865786!
cardinalPointToYourLeft

	^ECardinalPoint new initializeWith: marsRover.! !
!SCardinalPoint methodsFor: 'as yet unclassified' stamp: 'bi 5/17/2021 15:48:27' prior: 50866601 overrides: 50865791!
cardinalPointToYourRight

	^OCardinalPoint new initializeWith: marsRover.! !
!MarsRover methodsFor: 'operations' stamp: 'bi 5/17/2021 15:49:10' prior: 50866378!
process: aProcess

	aProcess do: [:s | 
		self assertInstructionValid: s.
		($f = s) ifTrue: [
			($N = self cardinalPoint ) ifTrue: [ self moveOnYAxis: 1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
		].
		($b = s) ifTrue: [
			($N = self cardinalPoint) ifTrue: [ self moveOnYAxis: -1] .
			($S = self cardinalPoint) ifTrue: [ self moveOnYAxis: 1] .
			($O = self cardinalPoint) ifTrue: [ self moveOnXAxis: 1] .
			($E = self cardinalPoint) ifTrue: [ self moveOnXAxis: -1] .
		].
		($l = s) ifTrue: [
			cardinalPoint := cardinalPoint cardinalPointToYourLeft .
		].
		($r = s) ifTrue: [
			cardinalPoint := cardinalPoint cardinalPointToYourRight .
		].
	].! !

!testRun: #MarsRoverTest #test01CreationCorrectlyPositionAndCardinalPoint stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test02IsAtHeadingReturnFalseWhenMarsRoverIsNotInThePositionOfCreation stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test03IsAtHeadingReturnFalseWhenMarsRoverIsNotInTheCardinalPointOfCreation stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test04CannotCreateMarsRoverWithWrongCardinalPoint stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test05CannotCreateMarsRoverWithWrongYCoordinateOfPosition stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test06CannotCreateMarsRoverWithWrongXCoordinateOfPosition stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test07CannotCreateMarsRoverWithWrongPosition stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test08CardinalPointNAndCommandFThenMove1PositiveOnYAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test09CardinalPointSAndCommandFThenMove1NegativeOnYAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test10CardinalPointOAndCommandFThenMove1NegativeOnXAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test11CardinalPointEAndCommandFThenMove1PositiveOnXAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test12CardinalPointNAndCommandBThenMove1NegativeOnYAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test13CardinalPointSAndCommandBThenMove1PositiveOnYAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test14CardinalPointOAndCommandBThenMove1PositiveOnXAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test15CardinalPointEAndCommandBThenMove1NegativeOnXAxis stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test16MarsRoverStopProcessingOnInvalidInstruccion stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test17CardinalPointNAndCommandLThenRotateLeftToCardinalPointO stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test18CardinalPointSAndCommandLThenRotateLeftToCardinalPointE stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test19CardinalPointOAndCommandLThenRotateLeftToCardinalPointS stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test20CardinalPointEAndCommandLThenRotateLeftToCardinalPointN stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test21CardinalPointNAndCommandRThenRotateRightToCardinalPointE stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test22CardinalPointSAndCommandRThenRotateRightToCardinalPointO stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test23CardinalPointOAndCommandRThenRotateRightToCardinalPointN stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

!testRun: #MarsRoverTest #test24CardinalPointEAndCommandRThenRotateRightToCardinalPointS stamp: 'bi 5/17/2021 15:49:14'!
PASSED!

----QUIT----(17 May 2021 15:49:41) CuisUniversity-4532.image priorSource: 17136059!